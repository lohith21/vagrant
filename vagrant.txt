Vagrant :-

Hypervisor Type 2 :- Oracle Virtual Box
Vagrant : Vagrant software version 2.2.19
Sources : D:\Study Material\Sources

Vagrant Cloud  : Downloads the images from Vagrant cloud when we initialize the server
https://app.vagrantup.com/boxes/search

Vagrant is a command line tool 


Vagrant for VMs
- No OS Installations
- VM Setup through images (vagrant boxes)
- Images/Boxes available in vagrant cloud
- Manage VMs with a file (Vagrantfile)
- VM changes automatic through Vagrantfile
- Vagrant commands to manage VMs
- Provisioning VM/Executing commands and script


Vagrant Bridge Network :-
When we create a VM, IP is assigned through VirtualBox NAT network. By default, it will be in a private network and we cannot reach from outside.0
If we want to connect to the VM from our laptop or physical network, we need to use bridge network.

Through bridge network, VM created inside the VirtualBox will get IP address from the same IP Subnet of Laptop.

Vagrant Commands :-

## Initializes by creating a Vagrantfile and Downloads the image from Vagrant Cloud if image is not available in local computer/directory
	vagrant init ubuntu/xenial64  ### downloads image of ubuntu/xenial64
	vagrant init centos/7  ## downloads image of CentOS7

## To bring the VM online
	vagrant up

## SSH to the VM
	vagrant ssh

## to shutdown the VM
	vagrant halt

## to destroy the VM
	vagrant destroy

## to reboot the vm
	vagrant reload

## to suspend the vm
	vagrant suspend

## to resume the suspended vm
	vagrant resume

## to reload the vm
	vagrant reload

Config File :-

  config.vm.box = "ubuntu/xenial64"  ### Operating System box
  config.vm.provider = "virtualbox"  ### virtual box
  config.vm.network :private_network, ip: "192.168.56.153"   ### to update static IP
  config.vm.synced_folder = how you access files from your computer
  config.vm.provision = what we want to setup

################################# 

Typing vagrant from the command line will display a list of all available commands.

Be sure that you are in the same directory as the Vagrantfile when running these commands!

Creating a VM
vagrant init -- Initialize Vagrant with a Vagrantfile and ./.vagrant directory, using no specified base image. Before you can do vagrant up, you'll need to specify a base image in the Vagrantfile.
vagrant init <boxpath> -- Initialize Vagrant with a specific box. To find a box, go to the public Vagrant box catalog. When you find one you like, just replace it's name with boxpath. For example, vagrant init ubuntu/trusty64.
Starting a VM
vagrant up -- starts vagrant environment (also provisions only on the FIRST vagrant up)
vagrant resume -- resume a suspended machine (vagrant up works just fine for this as well)
vagrant provision -- forces reprovisioning of the vagrant machine
vagrant reload -- restarts vagrant machine, loads new Vagrantfile configuration
vagrant reload --provision -- restart the virtual machine and force provisioning
Getting into a VM
vagrant ssh -- connects to machine via SSH
vagrant ssh <boxname> -- If you give your box a name in your Vagrantfile, you can ssh into it with boxname. Works from any directory.
Stopping a VM
vagrant halt -- stops the vagrant machine
vagrant suspend -- suspends a virtual machine (remembers state)
Cleaning Up a VM
vagrant destroy -- stops and deletes all traces of the vagrant machine
vagrant destroy -f -- same as above, without confirmation
Boxes
vagrant box list -- see a list of all installed boxes on your computer
vagrant box add <name> <url> -- download a box image to your computer
vagrant box outdated -- check for updates vagrant box update
vagrant box remove <name> -- deletes a box from the machine
vagrant package -- packages a running virtualbox env in a reusable box
Saving Progress
-vagrant snapshot save [options] [vm-name] <name> -- vm-name is often default. Allows us to save so that we can rollback at a later time

Tips
vagrant -v -- get the vagrant version
vagrant status -- outputs status of the vagrant machine
vagrant global-status -- outputs status of all vagrant machines
vagrant global-status --prune -- same as above, but prunes invalid entries
vagrant provision --debug -- use the debug flag to increase the verbosity of the output
vagrant push -- yes, vagrant can be configured to deploy code!
vagrant up --provision | tee provision.log -- Runs vagrant up, forces provisioning and logs all output to a file
Plugins
vagrant-hostsupdater : $ vagrant plugin install vagrant-hostsupdater to update your /etc/hosts file automatically each time you start/stop your vagrant box.
  










